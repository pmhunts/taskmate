{"ast":null,"code":"import React,{useState,useEffect}from'react';import TaskList from'./components/TaskList';import TaskForm from'./components/TaskForm';import SearchBar from'./components/SearchBar';import CategoryFilter from'./components/CategoryFilter';import Header from'./components/Header';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_URL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';function App(){const[tasks,setTasks]=useState([]);const[isEditing,setIsEditing]=useState(false);const[currentTask,setCurrentTask]=useState({});const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[searchQuery,setSearchQuery]=useState('');const[selectedCategory,setSelectedCategory]=useState('');// Fetch all tasks\nuseEffect(()=>{const fetchTasks=async()=>{try{let url=\"\".concat(API_URL,\"/tasks\");if(searchQuery){url=\"\".concat(API_URL,\"/tasks/search?query=\").concat(encodeURIComponent(searchQuery));}else if(selectedCategory){url=\"\".concat(API_URL,\"/tasks/category/\").concat(encodeURIComponent(selectedCategory));}const response=await fetch(url);if(!response.ok)throw new Error('Failed to fetch tasks');const data=await response.json();setTasks(data);setLoading(false);}catch(err){setError(err.message);setLoading(false);}};fetchTasks();},[searchQuery,selectedCategory]);// Add new task\nconst addTask=async task=>{try{const response=await fetch(\"\".concat(API_URL,\"/tasks\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(task)});if(!response.ok)throw new Error('Failed to add task');const newTask=await response.json();setTasks([newTask,...tasks]);}catch(err){setError(err.message);}};// Update task\nconst updateTask=async(id,updatedTask)=>{try{const response=await fetch(\"\".concat(API_URL,\"/tasks/\").concat(id),{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(updatedTask)});if(!response.ok)throw new Error('Failed to update task');const data=await response.json();setTasks(tasks.map(task=>task._id===id?data:task));setIsEditing(false);setCurrentTask({});}catch(err){setError(err.message);}};// Delete task\nconst deleteTask=async id=>{try{const response=await fetch(\"\".concat(API_URL,\"/tasks/\").concat(id),{method:'DELETE'});if(!response.ok)throw new Error('Failed to delete task');setTasks(tasks.filter(task=>task._id!==id));}catch(err){setError(err.message);}};// Toggle task completion\nconst toggleComplete=async id=>{try{const response=await fetch(\"\".concat(API_URL,\"/tasks/\").concat(id,\"/toggle\"),{method:'PATCH'});if(!response.ok)throw new Error('Failed to update task status');const updatedTask=await response.json();setTasks(tasks.map(task=>task._id===id?updatedTask:task));}catch(err){setError(err.message);}};// Edit task (setup for editing)\nconst editTask=task=>{setIsEditing(true);setCurrentTask(task);};// Cancel editing\nconst cancelEdit=()=>{setIsEditing(false);setCurrentTask({});};// Get unique categories\nconst categories=[...new Set(tasks.map(task=>task.category).filter(Boolean))];return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar\",children:[/*#__PURE__*/_jsx(TaskForm,{addTask:addTask,updateTask:updateTask,isEditing:isEditing,currentTask:currentTask,cancelEdit:cancelEdit}),/*#__PURE__*/_jsx(CategoryFilter,{categories:categories,selectedCategory:selectedCategory,setSelectedCategory:setSelectedCategory})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsx(SearchBar,{searchQuery:searchQuery,setSearchQuery:setSearchQuery}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),loading?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading tasks...\"}):/*#__PURE__*/_jsx(TaskList,{tasks:tasks,deleteTask:deleteTask,editTask:editTask,toggleComplete:toggleComplete})]})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","TaskList","TaskForm","SearchBar","CategoryFilter","Header","jsx","_jsx","jsxs","_jsxs","API_URL","process","env","REACT_APP_API_URL","App","tasks","setTasks","isEditing","setIsEditing","currentTask","setCurrentTask","loading","setLoading","error","setError","searchQuery","setSearchQuery","selectedCategory","setSelectedCategory","fetchTasks","url","concat","encodeURIComponent","response","fetch","ok","Error","data","json","err","message","addTask","task","method","headers","body","JSON","stringify","newTask","updateTask","id","updatedTask","map","_id","deleteTask","filter","toggleComplete","editTask","cancelEdit","categories","Set","category","Boolean","className","children"],"sources":["C:/Users/piyus/OneDrive/Desktop/Personal/offencial work/taskmate/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TaskList from './components/TaskList';\r\nimport TaskForm from './components/TaskForm';\r\nimport SearchBar from './components/SearchBar';\r\nimport CategoryFilter from './components/CategoryFilter';\r\nimport Header from './components/Header';\r\nimport './App.css';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentTask, setCurrentTask] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState('');\r\n\r\n  // Fetch all tasks\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        let url = `${API_URL}/tasks`;\r\n        \r\n        if (searchQuery) {\r\n          url = `${API_URL}/tasks/search?query=${encodeURIComponent(searchQuery)}`;\r\n        } else if (selectedCategory) {\r\n          url = `${API_URL}/tasks/category/${encodeURIComponent(selectedCategory)}`;\r\n        }\r\n        \r\n        const response = await fetch(url);\r\n        if (!response.ok) throw new Error('Failed to fetch tasks');\r\n        \r\n        const data = await response.json();\r\n        setTasks(data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, [searchQuery, selectedCategory]);\r\n\r\n  // Add new task\r\n  const addTask = async (task) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/tasks`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(task),\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Failed to add task');\r\n      \r\n      const newTask = await response.json();\r\n      setTasks([newTask, ...tasks]);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  // Update task\r\n  const updateTask = async (id, updatedTask) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/tasks/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(updatedTask),\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Failed to update task');\r\n      \r\n      const data = await response.json();\r\n      setTasks(tasks.map(task => (task._id === id ? data : task)));\r\n      setIsEditing(false);\r\n      setCurrentTask({});\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  // Delete task\r\n  const deleteTask = async (id) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/tasks/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Failed to delete task');\r\n      \r\n      setTasks(tasks.filter(task => task._id !== id));\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  // Toggle task completion\r\n  const toggleComplete = async (id) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/tasks/${id}/toggle`, {\r\n        method: 'PATCH',\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Failed to update task status');\r\n      \r\n      const updatedTask = await response.json();\r\n      setTasks(tasks.map(task => task._id === id ? updatedTask : task));\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  // Edit task (setup for editing)\r\n  const editTask = (task) => {\r\n    setIsEditing(true);\r\n    setCurrentTask(task);\r\n  };\r\n\r\n  // Cancel editing\r\n  const cancelEdit = () => {\r\n    setIsEditing(false);\r\n    setCurrentTask({});\r\n  };\r\n\r\n  // Get unique categories\r\n  const categories = [...new Set(tasks.map(task => task.category).filter(Boolean))];\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <div className=\"container\">\r\n        <div className=\"sidebar\">\r\n          <TaskForm \r\n            addTask={addTask} \r\n            updateTask={updateTask}\r\n            isEditing={isEditing}\r\n            currentTask={currentTask}\r\n            cancelEdit={cancelEdit}\r\n          />\r\n          <CategoryFilter \r\n            categories={categories} \r\n            selectedCategory={selectedCategory}\r\n            setSelectedCategory={setSelectedCategory}\r\n          />\r\n        </div>\r\n        <div className=\"main-content\">\r\n          <SearchBar \r\n            searchQuery={searchQuery} \r\n            setSearchQuery={setSearchQuery} \r\n          />\r\n          {error && <div className=\"error-message\">{error}</div>}\r\n          {loading ? (\r\n            <div className=\"loading\">Loading tasks...</div>\r\n          ) : (\r\n            <TaskList \r\n              tasks={tasks} \r\n              deleteTask={deleteTask}\r\n              editTask={editTask}\r\n              toggleComplete={toggleComplete}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}